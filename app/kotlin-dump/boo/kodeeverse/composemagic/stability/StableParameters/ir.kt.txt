@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun StableParameterDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(900846037)
  sourceInformation($composer, "C(StableParameterDemo)30@1238L33,32@1275L558:StableParameters.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(900846037, $changed, -1, "boo.kodeeverse.composemagic.stability.StableParameterDemo (StableParameters.kt:29)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -1870350826, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -942516858, "C37@1461L25,37@1447L66,42@1633L11,38@1518L229,46@1752L53,48@1811L18:StableParameters.kt#b558il")
      Text("ROOT @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, -1415871510, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      StableParameter(1, $composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    StableParameterDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
val list: MutableList<Int> = mutableListOf(0)
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun UnstableParameterDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-48204434)
  sourceInformation($composer, "C(UnstableParameterDemo)56@1995L33,58@2032L673:StableParameters.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-48204434, $changed, -1, "boo.kodeeverse.composemagic.stability.UnstableParameterDemo (StableParameters.kt:55)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, 920180655, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -24197190, "C64@2225L25,63@2204L134,71@2458L53,67@2343L271,78@2619L53,80@2678L23:StableParameters.kt#b558il")
      Text("ROOT @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${list.joinToString()})", Companion.padding(
        horizontal = 30.dp
      ), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b00110000, 0, 0b00111111111111111100)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, -416414867, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
            list += <get-count>()
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      UnstableParameter(list, $composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    UnstableParameterDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun UnstableParameterButStableArgumentDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(303036579)
  sourceInformation($composer, "C(UnstableParameterButStableArgumentDemo)85@2783L33,87@2820L577:StableParameters.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(303036579, $changed, -1, "boo.kodeeverse.composemagic.stability.UnstableParameterButStableArgumentDemo (StableParameters.kt:84)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -839621692, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 70883993, "C92@3006L25,92@2992L66,97@3178L11,93@3063L229,101@3297L53,103@3356L37:StableParameters.kt#b558il")
      Text("ROOT @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, 1803407460, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      UnstableParameterButStableArgument(1, $composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    UnstableParameterButStableArgumentDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
private fun StableParameter(value: Int, $composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(1391279223)
  sourceInformation($composer, "C(StableParameter)N(value)111@3502L25,110@3472L120:StableParameters.kt#b558il")
  val $dirty = $changed
  if ($changed and 0b0110 == 0) {
    $dirty = $dirty or if ($composer.changed(value)) 0b0100 else 0b0010
  }
  if ($composer.shouldExecute($dirty and 0b0011 != 0b0010, $dirty and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(1391279223, $dirty, -1, "boo.kodeeverse.composemagic.stability.StableParameter (StableParameters.kt:107)")
    }
    used(value)
    Text("StableParameter @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, Companion.Bold, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000000000000000000, 0, 0b00111111111110111110)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    StableParameter(value, $composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
private fun UnstableParameter(value: List<*>, $composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(618331855)
  sourceInformation($composer, "C(UnstableParameter)N(value)120@3734L25,119@3702L123:StableParameters.kt#b558il")
  val $dirty = $changed
  if ($changed and 0b0110 == 0) {
    $dirty = $dirty or if ($composer.changedInstance(value)) 0b0100 else 0b0010
  }
  if ($composer.shouldExecute($dirty and 0b0011 != 0b0010, $dirty and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(618331855, $dirty, -1, "boo.kodeeverse.composemagic.stability.UnstableParameter (StableParameters.kt:118)")
    }
    Text("UnstableParameter @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${value.joinToString()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, Companion.Bold, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000000000000000000, 0, 0b00111111111110111110)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    UnstableParameter(value, $composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
private fun UnstableParameterButStableArgument(value: Any, $composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(464662758)
  sourceInformation($composer, "C(UnstableParameterButStableArgument)N(value)129@3968L25,128@3919L161:StableParameters.kt#b558il")
  val $dirty = $changed
  if ($changed and 0b0110 == 0) {
    $dirty = $dirty or if ($composer.changedInstance(value)) 0b0100 else 0b0010
  }
  if ($composer.shouldExecute($dirty and 0b0011 != 0b0010, $dirty and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(464662758, $dirty, -1, "boo.kodeeverse.composemagic.stability.UnstableParameterButStableArgument (StableParameters.kt:125)")
    }
    used(value)
    val tmp0_text = "UnstableParameterButStableArgument @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})"
    val tmp1_fontWeight = Companion.Bold
    val tmp2_fontSize = 12.sp
    Text(tmp0_text, null, <unsafe-coerce>(0L), null, tmp2_fontSize, null, tmp1_fontWeight, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000110000000000000, 0, 0b00111111111110101110)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    UnstableParameterButStableArgument(value, $composer, updateChangedFlags($changed or 0b0001))
  }
}